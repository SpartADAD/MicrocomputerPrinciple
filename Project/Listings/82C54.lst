C51 COMPILER V9.59.0.0   82C54                                                             12/12/2018 23:13:03 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE 82C54
OBJECT MODULE PLACED IN .\Objects\82C54.obj
COMPILER INVOKED BY: E:\Keil5\C51\BIN\C51.EXE USERS\HardWare\82C54.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\USERS\HardW
                    -are;.\USERS) DEBUG OBJECTEXTEND PRINT(.\Listings\82C54.lst) TABS(2) OBJECT(.\Objects\82C54.obj)

line level    source

   1          /****************************82C55.c***********************/
   2          #include "82C54.h"
   3          #include "main.h"
   4          #include "STC15F2K60S2.h"
   5          
   6          uint8_t xdata P8254_CTL _at_ 0xF903;
   7          uint8_t xdata P8254_0 _at_ 0xF900;
   8          uint8_t xdata P8254_1 _at_ 0xF901;
   9          uint8_t xdata P8254_2 _at_ 0xF902;
  10          
  11          uint8_t  P374       _at_ 0xFa00; 
  12          void My82C54Init(void)
  13          {
  14   1        CLK_DIV=0x40;
  15   1        #if C54_EXPERIMENT == C54_EXPERIMENT_1
                    Init_82C54(COUNT_0, INTERRUPT_MODE,5,BINARY_COUNT);
                #elif C54_EXPERIMENT == C54_EXPERIMENT_2
                    /**/
                    Init_82C54(COUNT_1, SQUARE_WAVE_MODE,2000,BINARY_COUNT);
                    Init_82C54(COUNT_2, SQUARE_WAVE_MODE,2000,BINARY_COUNT);
                #elif C54_EXPERIMENT == C54_EXPERIMENT_3
  22   1            
  23   1        #endif
  24   1      
  25   1      
  26   1      }
  27          
  28          void Init_82C54(uint8_t count_x, uint8_t counterMode, uint16_t countTime,uint8_t codeMode)
  29          {
  30   1        uint8_t lowValue=0;
  31   1        uint8_t highValue=0;
  32   1        uint8_t  initCode=0;
  33   1        
  34   1        count_x&=0x03;
  35   1        counterMode&=0x07;
  36   1        initCode = ((count_x << 6) | (counterMode << 1)) | 0X30 | codeMode;
  37   1        //先写低位，再写高位，选择二进制计数
  38   1        P8254_CTL = initCode;   
  39   1        //当为工作方式即方式0时，计数值需要减1
  40   1        if(counterMode == INTERRUPT_MODE)     
  41   1        {
  42   2          countTime -= 1;
  43   2        }
  44   1        
  45   1        lowValue = (countTime & 0XFF);    //取低字节数
  46   1        highValue = (countTime >> 8) & 0XFF;    //取高字节数
  47   1        switch(count_x)
  48   1        {
  49   2          case COUNT_0 :        //对应计数器0
  50   2            P8254_0 = lowValue;
  51   2            P8254_0 = highValue;
  52   2            break;
  53   2          
  54   2          case COUNT_1 :        //对应计数器1
C51 COMPILER V9.59.0.0   82C54                                                             12/12/2018 23:13:03 PAGE 2   

  55   2            P8254_1= lowValue;
  56   2            P8254_1 = highValue;
  57   2            break;
  58   2          
  59   2          case COUNT_2 :        //对应计数器2
  60   2            P8254_2= lowValue;
  61   2            P8254_2 = highValue;
  62   2            break;
  63   2          
  64   2          default:
  65   2            
  66   2          break;
  67   2        }
  68   1      }
  69          
  70          void EXInterruptLed(void)
  71          {
  72   1        static uint16_t timeDelay=0;
  73   1        static uint8_t rightShift=0x01;
  74   1        timeDelay++;
  75   1        if(gParam.c55LedMode==0)
  76   1        {
  77   2          if(timeDelay<=100)
  78   2          {
  79   3            P374=0xf0;
  80   3          }else if(timeDelay>100&&timeDelay<200)
  81   2          {
  82   3            P374=0x0f;
  83   3          }else
  84   2          {
  85   3            timeDelay=0;
  86   3          }
  87   2        }
  88   1        else if(gParam.c55LedMode==1)
  89   1        {
  90   2          
  91   2          if(timeDelay>=200)
  92   2          {
  93   3            timeDelay=0;
  94   3            rightShift=(rightShift<<1);
  95   3            if(rightShift==0)
  96   3            {
  97   4              rightShift=0x01;
  98   4            }
  99   3            P374=~rightShift;
 100   3          }
 101   2        }
 102   1      }
 103          void ShowCountTime(void)
 104          {
 105   1        uint32_t xdata countTime1=P8254_0;
 106   1        uint32_t xdata countTime2=P8254_1;
 107   1      
 108   1      }
 109          #define KEY_VALUE (P1&0x03)
 110          void DiffFangBo(void)
 111          {
 112   1        static  xdata lastValue = 0;
 113   1        uint8_t key = KEY_VALUE;
 114   1        if(lastValue==key)
 115   1        { 
 116   2          return;
C51 COMPILER V9.59.0.0   82C54                                                             12/12/2018 23:13:03 PAGE 3   

 117   2        }
 118   1        
 119   1        if(KEY_VALUE==0)
 120   1        {
 121   2          Init_82C54(COUNT_0,SQUARE_WAVE_MODE,10,BINARY_COUNT);
 122   2        }
 123   1        else if(KEY_VALUE==1)
 124   1        {
 125   2          Init_82C54(COUNT_0,SQUARE_WAVE_MODE,100,BINARY_COUNT);
 126   2        }
 127   1        else if(KEY_VALUE==2)
 128   1        {
 129   2          Init_82C54(COUNT_0,SQUARE_WAVE_MODE,1000,BINARY_COUNT);
 130   2        }
 131   1        else if(KEY_VALUE==3)
 132   1        {
 133   2          Init_82C54(COUNT_0,SQUARE_WAVE_MODE,10000,BINARY_COUNT);
 134   2        }
 135   1        lastValue = key;
 136   1      }
 137          
 138          void MyExperiment82C54(void)
 139          {
 140   1        #if C54_EXPERIMENT == C54_EXPERIMENT_1
                   EXInterruptLed();
                #elif C54_EXPERIMENT == C54_EXPERIMENT_2
                   ShowCountTime();
                #elif C54_EXPERIMENT == C54_EXPERIMENT_3
 145   1            DiffFangBo();
 146   1        #endif
 147   1      
 148   1      
 149   1      
 150   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    352    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      5       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
