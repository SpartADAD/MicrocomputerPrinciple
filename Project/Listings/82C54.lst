C51 COMPILER V9.59.0.0   82C54                                                             12/11/2018 22:46:14 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE 82C54
OBJECT MODULE PLACED IN .\Objects\82C54.obj
COMPILER INVOKED BY: E:\Keil5\C51\BIN\C51.EXE USERS\HardWare\82C54.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\USERS\HardW
                    -are;.\USERS) DEBUG OBJECTEXTEND PRINT(.\Listings\82C54.lst) TABS(2) OBJECT(.\Objects\82C54.obj)

line level    source

   1          /****************************82C55.c***********************/
   2          #include "82C54.h"
   3          #include "main.h"
   4          uint8_t xdata P8254_CTL _at_ 0xF903;
   5          uint8_t xdata P8254_0 _at_ 0xF900;
   6          uint8_t xdata P8254_1 _at_ 0xF901;
   7          uint8_t xdata P8254_2 _at_ 0xF902;
   8          
   9          uint8_t  P374       _at_ 0xFa00; 
  10          
  11          void Init_8254(uint8_t count_x, uint8_t timerMode, uint8_t countTime,uint8_t codeMode)
  12          {
  13   1        uint8_t lowValue=0;
  14   1        uint8_t highValue=0;
  15   1        uint8_t  initCode=0;
  16   1        
  17   1        count_x&=0x03;
  18   1        timerMode&=0x05;
  19   1        initCode = ((count_x << 6) | (timerMode << 1)) | 0X30 | codeMode;
  20   1        //先写低位，再写高位，选择二进制计数
  21   1        P8254_CTL = initCode;   
  22   1        //当为工作方式即方式0时，计数值需要减1
  23   1        if(timerMode == INTERRUPT_MODE)     
  24   1        {
  25   2          countTime -= 1;
  26   2        }
  27   1        
  28   1        lowValue = (countTime & 0XFF);    //取低字节数
  29   1        highValue = (countTime >> 8) & 0XFF;    //取高字节数
  30   1        switch(count_x)
  31   1        {
  32   2          case COUNT_0 :        //对应计数器0
  33   2            P8254_0 = lowValue;
  34   2            P8254_0 = highValue;
  35   2            break;
  36   2          
  37   2          case COUNT_1 :        //对应计数器1
  38   2            P8254_1= lowValue;
  39   2            P8254_1 = highValue;
  40   2            break;
  41   2          
  42   2          case COUNT_2 :        //对应计数器2
  43   2            P8254_2= lowValue;
  44   2            P8254_2 = highValue;
  45   2            break;
  46   2          
  47   2          default:
  48   2            
  49   2          break;
  50   2        }
  51   1      }
  52          
  53          void EXInterruptLed(void)
  54          {
C51 COMPILER V9.59.0.0   82C54                                                             12/11/2018 22:46:14 PAGE 2   

  55   1        uint32_t time0Cnt=P8254_0;
  56   1        static uint16_t timeDelay=0;
  57   1        static uint8_t rightShift=0x01;
  58   1        timeDelay++;
  59   1        if(gParam.c55LedMode)
  60   1        {
  61   2          if(time0Cnt%2)
  62   2          {
  63   3            P374=0x0f;
  64   3          }else
  65   2          {
  66   3            P374=0xf0;
  67   3          }
  68   2        }
  69   1        else
  70   1        {
  71   2          if(timeDelay>=200)
  72   2          {
  73   3            timeDelay=0;
  74   3            rightShift=(rightShift<<1);
  75   3            if(rightShift==0)
  76   3            {
  77   4              rightShift=0x01;
  78   4            }
  79   3            P374=~rightShift;
  80   3          }
  81   2        }
  82   1      }
  83          
  84          #define KEY_VALUE (P1&0x02)
  85          void DiffFangBo(void)
  86          {
  87   1        if(KEY_VALUE==0)
  88   1        {
  89   2          Init_8254(COUNT_0,SQUARE_WAVE_MODE,10,BINARY_COUNT);
  90   2        }
  91   1        else if(KEY_VALUE==1)
  92   1        {
  93   2          Init_8254(COUNT_0,SQUARE_WAVE_MODE,100,BINARY_COUNT);
  94   2        }
  95   1        else if(KEY_VALUE==2)
  96   1        {
  97   2          Init_8254(COUNT_0,SQUARE_WAVE_MODE,1000,BINARY_COUNT);
  98   2        }
  99   1        else if(KEY_VALUE==3)
 100   1        {
 101   2          Init_8254(COUNT_0,SQUARE_WAVE_MODE,10000,BINARY_COUNT);
 102   2        }
 103   1        
 104   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    214    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      3       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
