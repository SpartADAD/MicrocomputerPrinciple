C51 COMPILER V9.59.0.0   82C54                                                             12/14/2018 16:01:22 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE 82C54
OBJECT MODULE PLACED IN .\Objects\82C54.obj
COMPILER INVOKED BY: E:\Keil5\C51\BIN\C51.EXE USERS\HardWare\82C54.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\USERS\HardW
                    -are;.\USERS) DEBUG OBJECTEXTEND PRINT(.\Listings\82C54.lst) TABS(2) OBJECT(.\Objects\82C54.obj)

line level    source

   1          /****************************82C55.c***********************/
   2          #include "82C54.h"
   3          #include "main.h"
   4          #include "STC15F2K60S2.h"
   5          #include "HD7279.h"
   6          
   7          uint8_t xdata P8254_CTL _at_ 0xF903;
   8          uint8_t xdata P8254_0 _at_ 0xF900;
   9          uint8_t xdata P8254_1 _at_ 0xF901;
  10          uint8_t xdata P8254_2 _at_ 0xF902;
  11          
  12          uint8_t  P374       _at_ 0xFa00; 
  13          void My82C54Init(void)
  14          {
  15   1        CLK_DIV=0x40;
  16   1        #if C54_EXPERIMENT == C54_EXPERIMENT_1
  17   1            Init_82C54(COUNT_0, FREQUENCY_DIVISION_MODE,5,BINARY_COUNT);
  18   1        #elif C54_EXPERIMENT == C54_EXPERIMENT_2
                    /**/
                    Init_82C54(COUNT_1, SQUARE_WAVE_MODE,2000,BINARY_COUNT);
                    Init_82C54(COUNT_2, SQUARE_WAVE_MODE,2000,BINARY_COUNT);
                #elif C54_EXPERIMENT == C54_EXPERIMENT_3
                    
                #endif
  25   1      
  26   1      
  27   1      }
  28          
  29          void Init_82C54(uint8_t count_x, uint8_t counterMode, uint16_t countTime,uint8_t codeMode)
  30          {
  31   1        uint8_t lowValue=0;
  32   1        uint8_t highValue=0;
  33   1        uint8_t  initCode=0;
  34   1        
  35   1        count_x&=0x03;
  36   1        counterMode&=0x07;
  37   1        initCode = ((count_x << 6) | (counterMode << 1)) | 0X30 | codeMode;
  38   1        //先写低位，再写高位，选择二进制计数
  39   1        P8254_CTL = initCode;   
  40   1        //当为工作方式即方式0时，计数值需要减1
  41   1        if(counterMode == INTERRUPT_MODE)     
  42   1        {
  43   2          countTime -= 1;
  44   2        }
  45   1        
  46   1        lowValue = (countTime & 0XFF);    //取低字节数
  47   1        highValue = (countTime >> 8) & 0XFF;    //取高字节数
  48   1        switch(count_x)
  49   1        {
  50   2          case COUNT_0 :        //对应计数器0
  51   2            P8254_0 = lowValue;
  52   2            P8254_0 = highValue;
  53   2            break;
  54   2          
C51 COMPILER V9.59.0.0   82C54                                                             12/14/2018 16:01:22 PAGE 2   

  55   2          case COUNT_1 :        //对应计数器1
  56   2            P8254_1= lowValue;
  57   2            P8254_1 = highValue;
  58   2            break;
  59   2          
  60   2          case COUNT_2 :        //对应计数器2
  61   2            P8254_2= lowValue;
  62   2            P8254_2 = highValue;
  63   2            break;
  64   2          
  65   2          default:
  66   2            
  67   2          break;
  68   2        }
  69   1      }
  70          
  71          void EXInterruptLed(void)
  72          {
  73   1        static uint16_t timeDelay=0;
  74   1        static uint8_t rightShift=0x01;
  75   1        timeDelay++;
  76   1        if(gParam.c55LedMode==0)
  77   1        {
  78   2          if(timeDelay<=100)
  79   2          {
  80   3            P374=0xf0;
  81   3          }else if(timeDelay>100&&timeDelay<200)
  82   2          {
  83   3            P374=0x0f;
  84   3          }else
  85   2          {
  86   3            timeDelay=0;
  87   3          }
  88   2        }
  89   1        else if(gParam.c55LedMode==1)
  90   1        {
  91   2          
  92   2          if(timeDelay>=200)
  93   2          {
  94   3            timeDelay=0;
  95   3            rightShift=(rightShift<<1);
  96   3            if(rightShift==0)
  97   3            {
  98   4              rightShift=0x01;
  99   4            }
 100   3            P374=~rightShift;
 101   3          }
 102   2        }
 103   1      }
 104          void ShowCountTime(void)
 105          {
 106   1        uint32_t xdata countTime1=P8254_0;
 107   1        uint32_t xdata countTime2=P8254_1;
 108   1      
 109   1      }
 110          #define KEY_VALUE (P1&0x03)
 111          void DiffFangBo(void)
 112          {
 113   1        static  xdata lastValue = 0;
 114   1        uint8_t key = KEY_VALUE;
 115   1        uint16_t xdata countTime1=P8254_0;
 116   1        
C51 COMPILER V9.59.0.0   82C54                                                             12/14/2018 16:01:22 PAGE 3   

 117   1        if(lastValue==key)
 118   1        { 
 119   2          return;
 120   2        }
 121   1        
 122   1        if(KEY_VALUE==0)
 123   1        {
 124   2          Init_82C54(COUNT_0,SQUARE_WAVE_MODE,10,BINARY_COUNT);
 125   2          HD7279ShowInt(200000);
 126   2        }
 127   1        else if(KEY_VALUE==1)
 128   1        {
 129   2          Init_82C54(COUNT_0,SQUARE_WAVE_MODE,100,BINARY_COUNT);
 130   2          HD7279ShowInt(20000);
 131   2        }
 132   1        else if(KEY_VALUE==2)
 133   1        {
 134   2          Init_82C54(COUNT_0,SQUARE_WAVE_MODE,1000,BINARY_COUNT);
 135   2          HD7279ShowInt(2000);
 136   2        }
 137   1        else if(KEY_VALUE==3)
 138   1        {
 139   2          Init_82C54(COUNT_0,SQUARE_WAVE_MODE,10000,BINARY_COUNT);
 140   2          HD7279ShowInt(200);
 141   2        }
 142   1        lastValue = key;
 143   1      }
 144          
 145          void MyExperiment82C54(void)
 146          {
 147   1        #if C54_EXPERIMENT == C54_EXPERIMENT_1
 148   1           EXInterruptLed();
 149   1        #elif C54_EXPERIMENT == C54_EXPERIMENT_2
                   ShowCountTime();
                #elif C54_EXPERIMENT == C54_EXPERIMENT_3
                    DiffFangBo();
                #endif
 154   1      
 155   1      
 156   1      
 157   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    432    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      5      12
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
