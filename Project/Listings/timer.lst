C51 COMPILER V9.59.0.0   TIMER                                                             11/17/2018 23:35:54 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE TIMER
OBJECT MODULE PLACED IN .\Objects\timer.obj
COMPILER INVOKED BY: E:\Keil5\C51\BIN\C51.EXE USERS\HardWare\timer.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\USERS\HardW
                    -are;.\USERS) DEBUG OBJECTEXTEND PRINT(.\Listings\timer.lst) TABS(2) OBJECT(.\Objects\timer.obj)

line level    source

   1          /****************************timer.c********************************/
   2          
   3          #include "timer.h"
   4          #include "STC15F2K60S2.h"
   5          #include "main.h"
   6          
   7          /**
   8            * @brief  ÂÆöÊó∂Âô®0ÂàùÂßãÂåñÂáΩÊï∞ ÈÄöËøá‰Ωç‰∏é ‰ΩçÁßªÊìç‰ΩúÊ±ÇÂæólowValue Â°´ÂÖ•‰Ωé‰Ωç highValue Â°´ÂÖ
             -•È´ò‰ΩçÁöÑÂÄº 
   9            * @param  workMode: Â∑•‰ΩúÊ®°ÂºèÔºåÂ°´ÂÖ•ÂÄºÂÆèÂÆö‰πâ  0-3              
  10            * @param  timerStartValueÔºö   ÂÆöÊó∂Âô®Ë£ÖËΩΩÂÄº  
  11            * @retval None
  12            */
  13          void TIM0_Init(uint16_t workMode,uint16_t timerStartValue)
  14          {
  15   1          uint8_t lowValue =  0;
  16   1          uint8_t highValue = 0;
  17   1          switch(workMode)
  18   1          {
  19   2            case THIRTEEN_BIT_COUNT:  
  20   2              TMOD |= workMode;
  21   2              /*ÊúÄÂ§ßËÆ°Êï∞ÂÄº0x1FFF*/
  22   2              timerStartValue&=0x1FFF;
  23   2              
  24   2              lowValue=timerStartValue&0x1F;
  25   2              highValue=(timerStartValue>>5);
  26   2              TH0  = highValue;
  27   2              TL0  = lowValue;
  28   2              TR0=1;
  29   2            break;
  30   2            
  31   2            case SIXTEEN_BIT_COUNT:  
  32   2              TMOD |= workMode;
  33   2              lowValue=timerStartValue&0xFF;
  34   2              highValue=(timerStartValue>>8);
  35   2              TH0  = highValue;
  36   2              TL0  = lowValue;
  37   2              TR0=1;
  38   2            break;
  39   2            
  40   2            case EIGHT_BIT_AUTO_RELOUD_COUNT:  
  41   2              TMOD |= workMode;
  42   2              /*ËÆ°Êï∞ÊúÄÂ§ßÂÄº*/
  43   2              timerStartValue&=0xFF;
  44   2            
  45   2              lowValue=timerStartValue;
  46   2              highValue=timerStartValue;
  47   2              TH0  = highValue;
  48   2              TL0  = lowValue;
  49   2              TR0=1;
  50   2            break;
  51   2            
  52   2            case TWO_EIGHT_BIT_COUNT:  
  53   2              TMOD |= workMode;
C51 COMPILER V9.59.0.0   TIMER                                                             11/17/2018 23:35:54 PAGE 2   

  54   2              TH0  = highValue;
  55   2              TL0  = lowValue;
  56   2              TR0=1;
  57   2            break;
  58   2            
  59   2            default:
  60   2            
  61   2            break;
  62   2          }
  63   1      }
  64          /**
  65            * @brief  ÂÆöÊó∂Âô®1ÂàùÂßãÂåñÂáΩÊï∞ ÈÄöËøá‰Ωç‰∏é ‰ΩçÁßªÊìç‰ΩúÊ±ÇÂæólowValue Â°´ÂÖ•‰Ωé‰Ωç highValue Â°´ÂÖ
             -•È´ò‰ΩçÁöÑÂÄº 
  66            * @param  workMode: Â∑•‰ΩúÊ®°ÂºèÔºåÂ°´ÂÖ•ÂÄºÂÆèÂÆö‰πâ  0-3              
  67            * @param  timerStartValueÔºö   ÂÆöÊó∂Âô®Ë£ÖËΩΩÂÄº  
  68            * @retval None
  69            */
  70          void TIM1_Init(uint16_t workMode,uint16_t timerStartValue)
  71          {
  72   1          uint8_t lowValue =  0;
  73   1          uint8_t highValue = 0;
  74   1          switch(workMode)
  75   1          {
  76   2            case THIRTEEN_BIT_COUNT:  
  77   2              TMOD |= (workMode<<4);
  78   2              /*ÊúÄÂ§ßËÆ°Êï∞ÂÄº0x1FFF*/
  79   2              timerStartValue&=0x1FFF;
  80   2              
  81   2              lowValue=timerStartValue&0x1F;
  82   2              highValue=(timerStartValue>>5);
  83   2              TH1  = highValue;
  84   2              TL1  = lowValue;
  85   2              TR1=1;
  86   2            break;
  87   2            
  88   2            case SIXTEEN_BIT_COUNT:  
  89   2              TMOD |= (workMode<<4);
  90   2              lowValue=timerStartValue&0xFF;
  91   2              highValue=(timerStartValue>>8);
  92   2              TH1  = highValue;
  93   2              TL1  = lowValue;
  94   2              TR1=1;
  95   2            break;
  96   2            
  97   2            case EIGHT_BIT_AUTO_RELOUD_COUNT:  
  98   2              TMOD |= (workMode<<4);
  99   2              /*ËÆ°Êï∞ÊúÄÂ§ßÂÄº*/
 100   2              timerStartValue&=0xFF;
 101   2              lowValue=timerStartValue;
 102   2              highValue=timerStartValue;
 103   2              TH1  = highValue;
 104   2              TL1  = lowValue;
 105   2              TR1=1;
 106   2            break;
 107   2            
 108   2            default:
 109   2            break;
 110   2            
 111   2          }
 112   1      }
 113          /**
 114            * @brief  ÂÆöÊó∂Âô®0 1‰∏≠Êñ≠Âàù‰ΩøËÉΩÂáΩÊï∞
C51 COMPILER V9.59.0.0   TIMER                                                             11/17/2018 23:35:54 PAGE 3   

 115            * @param  timer: ÈÄâÊã©ÂÆöÊó∂Âô® 0 Êàñ1              
 116            * @retval None
 117            */
 118          void Timer_Interrupt(uint8_t timer)
 119          {
 120   1        /*ÊÄªÂºÄÂÖ≥‰∏≠Êñ≠*/
 121   1        EA=1;
 122   1        switch(timer)
 123   1        {
 124   2          case TIM0:
 125   2            ET0=1;
 126   2          break;
 127   2        
 128   2          case TIM1:
 129   2            ET1=1;
 130   2          break;
 131   2          
 132   2          default:
 133   2            
 134   2          break;
 135   2        }
 136   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    238    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       4
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
