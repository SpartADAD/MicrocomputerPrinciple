C51 COMPILER V9.59.0.0   HD7279                                                            11/17/2018 11:51:01 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE HD7279
OBJECT MODULE PLACED IN .\Objects\HD7279.obj
COMPILER INVOKED BY: E:\Keil5\C51\BIN\C51.EXE USERS\HardWare\HD7279.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\USERS\Hard
                    -Ware;.\USERS) DEBUG OBJECTEXTEND PRINT(.\Listings\HD7279.lst) TABS(2) OBJECT(.\Objects\HD7279.obj)

line level    source

   1          /****************************HD7279.c***********************/
   2          #include "HD7279.h"
   3          #include "delay.h"
   4          #include "stdio.h"
   5          
   6          //HD7279显示内容对应数码
   7          unsigned char xdata realCode[] = \
   8            {0x7e , 0x30 , 0x6d , 0x79 , 0x33 , 0x5b , 0x5f , 0x70 , 0x7f , 0x7b , 0x01 , 0x80 , 0x00 , 0x6f};
   9          //  0      1       2      3      4      5      6      7      8      9      -    .   blank error
  10          
  11          /**
  12            * @brief  HD7279发送一个字节
  13            * @note
  14            * @param  sendData：要发送的数据
  15            * @param
  16            * @retval none
  17            */
  18          void HD7279SendByte(unsigned char sendData)
  19          {
  20   1      #define SEND_DATA_LENGTH (8)
  21   1        unsigned char xdata sendCounter = 0;
  22   1        //片选端拉低
  23   1        cs=0;
  24   1        Delay10Us(12);
  25   1        //生成时钟信号并将八位数字依次发送
  26   1        for(sendCounter = 0 ; sendCounter < SEND_DATA_LENGTH ; sendCounter++)
  27   1        {
  28   2          if(sendData & 0x80)
  29   2          {
  30   3            dat = 1;
  31   3          }
  32   2          else
  33   2          {
  34   3            dat = 0;
  35   3          }
  36   2          //产生一个上升沿
  37   2          clk = 1;
  38   2          Delay10Us(2);
  39   2          //产生一个下降沿
  40   2          clk = 0;
  41   2          Delay10Us(2);
  42   2          sendData<<=1;
  43   2        }
  44   1        dat = 0;
  45   1      }
  46          
  47          /**
  48            * @brief  HD7279接收数据
  49            * @note
  50            * @param none
  51            *     @arg
  52            * @param none
  53            * @retval ：接受到的一个字节数据
  54            */
C51 COMPILER V9.59.0.0   HD7279                                                            11/17/2018 11:51:01 PAGE 2   

  55          unsigned char HD7279ReceiveByte(void)
  56          {
  57   1      #define RECEIVE_DATA_LENGTH (8)
  58   1        unsigned char xdata receiveCounter  = 0;
  59   1        unsigned char xdata receiveData = 0;
  60   1        //数据端拉高准备接收数据
  61   1        dat = 1;
  62   1        Delay10Us(12);
  63   1        //生成时钟信号并将八位数字一次接收
  64   1        for(receiveCounter = 0 ; receiveCounter < RECEIVE_DATA_LENGTH ; receiveCounter++)
  65   1        {
  66   2          //产生一个上升沿
  67   2          clk = 1;
  68   2          Delay10Us(2);
  69   2          receiveData*=2;
  70   2          if(dat)
  71   2          {
  72   3            receiveData|=0x01;
  73   3          }
  74   2          else
  75   2          {
  76   3          
  77   3          }
  78   2          clk = 0;
  79   2          Delay10Us(2);
  80   2        }
  81   1        dat = 0;
  82   1        return receiveData;
  83   1      }
  84          
  85          //通过HD7279让数码管显示对应内容
  86          /**
  87            * @brief  数码管显示函数
  88            * @note
  89            * @param cmd：命令字
  90            *     @arg
  91          * @param dataSend:数据字
  92            * @retval
  93            */
  94          void HD7279Write(unsigned char cmd , unsigned char dataSend)
  95          {
  96   1        HD7279SendByte(cmd);
  97   1        
  98   1        HD7279SendByte(dataSend); 
  99   1      }
 100          #define DIGITTAL_TUBE_LENGTH  8  
 101          void HD7279ShowInt(int showValue)
 102          {
 103   1        uint8_t xdata i=0;
 104   1        uint8_t xdata myString[DIGITTAL_TUBE_LENGTH]={0};
 105   1        uint8_t xdata tubeString[DIGITTAL_TUBE_LENGTH]={0};
 106   1        uint8_t xdata dataLength =0;
 107   1        /*判断是否在显示范围内，将其转换为字符数串*/
 108   1        if(showValue>=-9999999&&showValue<=99999999)
 109   1        {
 110   2          sprintf(myString,"%d",showValue);
 111   2        }
 112   1        else
 113   1        {
 114   2          showValue = 0;
 115   2          for(i=0;i<DIGITTAL_TUBE_LENGTH;i++)
 116   2          {
C51 COMPILER V9.59.0.0   HD7279                                                            11/17/2018 11:51:01 PAGE 3   

 117   3            HD7279Write(UNDECODE+i,0x01);
 118   3          }
 119   2          return;
 120   2        }
 121   1        /*计算长度*/
 122   1        for(i=0;i<DIGITTAL_TUBE_LENGTH;i++)
 123   1        {
 124   2          if(myString[i]!=0x00)
 125   2          {
 126   3            dataLength++;
 127   3          }
 128   2        }
 129   1        for(i=0;i<dataLength;i++)
 130   1        {
 131   2          if(myString[i]=='-')
 132   2          {
 133   3            myString[i]=0x01;
 134   3          }
 135   2          else
 136   2          {
 137   3            /*ASCII码 0x30*/
 138   3            myString[i]=realCode[(myString[i]-0x30)];
 139   3          }
 140   2        }
 141   1        
 142   1        for(i=0;i<DIGITTAL_TUBE_LENGTH;i++)
 143   1        {
 144   2          HD7279Write(UNDECODE+DIGITTAL_TUBE_LENGTH-i-1,myString[i]);
 145   2        }
 146   1      
 147   1      
 148   1      }
 149            
 150          void LEDShowInt(long int showData)
 151          {
 152   1        //要发送的八个数据
 153   1        unsigned char xdata LedData[8] = {0x00};
 154   1        //循环技术变量
 155   1        unsigned char xdata i = 0;
 156   1        //存放字符串用临时数组
 157   1        signed char xdata tempBuff[8] = {0};
 158   1        //数据长度记录变量
 159   1        unsigned char xdata dataLength = 0;
 160   1        
 161   1        //检验输入数据是否在显示范围内
 162   1        if(showData<=99999999&&showData>=-9999999)
 163   1        {
 164   2        
 165   2          //将输入的整数转换为字符串
 166   2          sprintf((char *)tempBuff,"%Ld",(long int)showData);
 167   2          
 168   2          //记录数字长度
 169   2          for(i = 0; i< 8; i++)
 170   2          {
 171   3            if(tempBuff[i]!=0x00)
 172   3            {
 173   4              dataLength++;
 174   4            }
 175   3          }
 176   2          
 177   2          //将字符串转换为对应编码
 178   2          for(i = dataLength;i > 0;i--)
C51 COMPILER V9.59.0.0   HD7279                                                            11/17/2018 11:51:01 PAGE 4   

 179   2          {
 180   3            if(tempBuff[i-1]!='-')
 181   3            {
 182   4              LedData[7 - (dataLength - i)]=tempBuff[i-1] - 0x30;
 183   4              LedData[7 - (dataLength - i)] = realCode[LedData[7 - (dataLength - i)]];
 184   4            }
 185   3            else
 186   3            {
 187   4              LedData[7 - (dataLength - i)] = realCode[10];     
 188   4            }
 189   3          }
 190   2          
 191   2          //显示对应编码
 192   2          for(i = 0;i<8;i++)
 193   2          {
 194   3            HD7279Write(0x97 - i , LedData[i]);
 195   3          }
 196   2        }
 197   1        else
 198   1        {
 199   2          //超出范围时全部显示e
 200   2          for(i = 0;i<8;i++)
 201   2          {
 202   3            HD7279Write(0x97 - i , 0x6f);
 203   3          }
 204   2        }
 205   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    994    ----
   CONSTANT SIZE    =     39    ----
   XDATA SIZE       =     14      47
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
