C51 COMPILER V9.59.0.0   HD7279                                                            12/28/2018 19:06:02 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE HD7279
OBJECT MODULE PLACED IN .\Objects\HD7279.obj
COMPILER INVOKED BY: E:\Keil5\C51\BIN\C51.EXE USERS\HardWare\HD7279.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\USERS\Hard
                    -Ware;.\USERS) DEBUG OBJECTEXTEND PRINT(.\Listings\HD7279.lst) TABS(2) OBJECT(.\Objects\HD7279.obj)

line level    source

   1          /****************************HD7279.c***********************/
   2          #include "HD7279.h"
   3          #include "delay.h"
   4          #include "stdio.h"
   5          #include "math.h"
   6          
   7          //HD7279显示内容对应数码
   8          unsigned char xdata realCode[] = \
   9            {0x7e , 0x30 , 0x6d , 0x79 , 0x33 , 0x5b , 0x5f , 0x70 , 0x7f , 0x7b , 0x01 , 0x80 , 0x00 , 0x6f};
  10          //  0      1       2      3      4      5      6      7      8      9      -    .     blank   error
  11          
  12          /**
  13            * @brief  HD7279发送一个字节
  14            * @note
  15            * @param  sendData：要发送的数据
  16            * @param
  17            * @retval none
  18            */
  19          void HD7279SendByte(unsigned char sendData)
  20          {
  21   1      #define SEND_DATA_LENGTH (8)
  22   1        unsigned char xdata sendCounter = 0;
  23   1        //片选端拉低
  24   1        cs=0;
  25   1        Delay10Us(12);
  26   1        //生成时钟信号并将八位数字依次发送
  27   1        for(sendCounter = 0 ; sendCounter < SEND_DATA_LENGTH ; sendCounter++)
  28   1        {
  29   2          if(sendData & 0x80)
  30   2          {
  31   3            dat = 1;
  32   3          }
  33   2          else
  34   2          {
  35   3            dat = 0;
  36   3          }
  37   2          //产生一个上升沿
  38   2          clk = 1;
  39   2          Delay10Us(2);
  40   2          //产生一个下降沿
  41   2          clk = 0;
  42   2          Delay10Us(2);
  43   2          sendData<<=1;
  44   2        }
  45   1        dat = 0;
  46   1      }
  47          
  48          /**
  49            * @brief  HD7279接收数据
  50            * @note
  51            * @param none
  52            *     @arg
  53            * @param none
  54            * @retval ：接受到的一个字节数据
C51 COMPILER V9.59.0.0   HD7279                                                            12/28/2018 19:06:02 PAGE 2   

  55            */
  56          unsigned char HD7279ReceiveByte(void)
  57          {
  58   1      #define RECEIVE_DATA_LENGTH (8)
  59   1        unsigned char xdata receiveCounter  = 0;
  60   1        unsigned char xdata receiveData = 0;
  61   1        //数据端拉高准备接收数据
  62   1        dat = 1;
  63   1        Delay10Us(12);
  64   1        //生成时钟信号并将八位数字一次接收
  65   1        for(receiveCounter = 0 ; receiveCounter < RECEIVE_DATA_LENGTH ; receiveCounter++)
  66   1        {
  67   2          //产生一个上升沿
  68   2          clk = 1;
  69   2          Delay10Us(2);
  70   2          receiveData*=2;
  71   2          if(dat)
  72   2          {
  73   3            receiveData|=0x01;
  74   3          }
  75   2          else
  76   2          {
  77   3          
  78   3          }
  79   2          clk = 0;
  80   2          Delay10Us(2);
  81   2        }
  82   1        dat = 0;
  83   1        return receiveData;
  84   1      }
  85          
  86          //通过HD7279让数码管显示对应内容
  87          /**
  88            * @brief  数码管显示函数
  89            * @note
  90            * @param cmd：命令字
  91            *     @arg
  92          * @param dataSend:数据字
  93            * @retval
  94            */
  95          void HD7279Write(unsigned char cmd , unsigned char dataSend)
  96          {
  97   1        HD7279SendByte(cmd);
  98   1        
  99   1        HD7279SendByte(dataSend); 
 100   1      }
 101          #define DIGITTAL_TUBE_LENGTH  8  
 102          /** 
 103            * @brief  HD7279  
 104            * @param  showValue HD7279需要显示的整型数据 
 105            * @retval none
 106            */
 107          void HD7279ShowInt(long showValue)
 108          {
 109   1        uint8_t xdata i=0;
 110   1        /*通过Springf存储的字符数组*/
 111   1        uint8_t xdata myString[DIGITTAL_TUBE_LENGTH]={0};
 112   1        /*通过数码管显示字符数组*/
 113   1        uint8_t xdata tubeString[DIGITTAL_TUBE_LENGTH]={0};
 114   1        /*显示有效位计数*/
 115   1        uint8_t xdata dataLength =0;
 116   1        /*判断是否在显示范围内，将其转换为字符数串*/
C51 COMPILER V9.59.0.0   HD7279                                                            12/28/2018 19:06:02 PAGE 3   

 117   1        if(showValue>=-9999999&&showValue<=99999999)
 118   1        {
 119   2          /*将输入数组转化为字符串*/
 120   2          sprintf(myString,"%ld",showValue);
 121   2        }
 122   1        else
 123   1        {
 124   2          showValue = 0;
 125   2          /*超出最大显示值*/
 126   2          for(i=0;i<DIGITTAL_TUBE_LENGTH;i++)
 127   2          {
 128   3            HD7279Write(UNDECODE+i,0x01);
 129   3          }
 130   2          return;
 131   2        }
 132   1        /*计算长度*/
 133   1        for(i=0;i<DIGITTAL_TUBE_LENGTH;i++)
 134   1        {
 135   2          /*有效位计数*/
 136   2          if(myString[i]!=0x00)
 137   2          {
 138   3            dataLength++;
 139   3          }
 140   2        }
 141   1        for(i=0;i<dataLength;i++)
 142   1        {
 143   2          /*如果是“-”便不管*/
 144   2          if(myString[i]=='-')
 145   2          {
 146   3            tubeString[(DIGITTAL_TUBE_LENGTH - dataLength) + i]=0x01;
 147   3          }
 148   2          else
 149   2          {
 150   3            /*ASCII码 0x30 进行赋值   由于将数据转换为字符型数据 由ASCII码表可得0-9的数字
             -的ASCII码减去0x30可得相对应的数字0-9
 151   3            填入HD7279显示内容对应数码数组realCode*/
 152   3            myString[i]=realCode[(myString[i]-0x30)];
 153   3            tubeString[(DIGITTAL_TUBE_LENGTH - dataLength) + i]=myString[i];
 154   3          }
 155   2        }
 156   1        
 157   1        for(i=0;i<DIGITTAL_TUBE_LENGTH;i++)
 158   1        {
 159   2          HD7279Write(UNDECODE+DIGITTAL_TUBE_LENGTH -1 - i,tubeString[i]);
 160   2        }
 161   1      
 162   1      
 163   1      }
 164          
 165          
 166          
 167          /*通过数据提取*/
 168          void HD7279ShowFloat(double showValue)
 169          {
 170   1        uint8_t xdata index=0;
 171   1        /*通过个人译码*/
 172   1        uint8_t xdata myCode[DIGITTAL_TUBE_LENGTH]={0};
 173   1        /*通过数码管显示字符数组*/
 174   1        uint8_t xdata tubeString[DIGITTAL_TUBE_LENGTH]={0};
 175   1        /*确定小数点位置*/
 176   1        uint8_t xdata pointIndex = 0;
 177   1        /*整数部分*/
C51 COMPILER V9.59.0.0   HD7279                                                            12/28/2018 19:06:02 PAGE 4   

 178   1        uint32_t xdata showValueInt = (uint32_t)fabs(showValue);
 179   1        /*小数部分*/
 180   1        double xdata showValueFloat = fabs(showValue) - showValueInt;
 181   1        uint32_t xdata getNum=1;
 182   1        /*有效数据长度*/
 183   1        uint8_t xdata dataLength=0;
 184   1        
 185   1        
 186   1        
 187   1        if(showValue<0)
 188   1        {
 189   2          myCode[dataLength]=10;
 190   2          showValue = fabs(showValue);
 191   2          dataLength++;
 192   2        }
 193   1          
 194   1        if(showValue>1.f)
 195   1        {
 196   2          /*获取整数位前有几位*/
 197   2          while(showValueInt/getNum)
 198   2          {
 199   3            getNum =getNum*10;
 200   3          }
 201   2          getNum=getNum /10;
 202   2          
 203   2          while(getNum)
 204   2          {
 205   3            myCode[dataLength]=showValueInt/getNum;
 206   3            dataLength++;
 207   3            showValueInt%=getNum;
 208   3            getNum =getNum/10;
 209   3          }
 210   2        }
 211   1        else
 212   1        {
 213   2          myCode[dataLength]=0;
 214   2          dataLength++;
 215   2        } 
 216   1        /*得到小数点显示的位数*/  
 217   1        pointIndex=dataLength - 1;
 218   1        getNum=pow(10,(DIGITTAL_TUBE_LENGTH - dataLength- 1))+1;
 219   1        showValueInt = (showValueFloat*getNum*10);
 220   1      
 221   1        while(getNum)
 222   1        {
 223   2          myCode[dataLength]=showValueInt/getNum;
 224   2          dataLength++;
 225   2          showValueInt %= getNum;
 226   2          getNum =getNum/10;
 227   2        }
 228   1          
 229   1        for(index=0;index<DIGITTAL_TUBE_LENGTH;index++)
 230   1        {
 231   2          tubeString[index]=realCode[myCode[index]];
 232   2          if(index == pointIndex)
 233   2          {
 234   3            tubeString[index]|=realCode[11];
 235   3          }
 236   2        }
 237   1        
 238   1        for(index=0;index<DIGITTAL_TUBE_LENGTH;index++)
 239   1        {
C51 COMPILER V9.59.0.0   HD7279                                                            12/28/2018 19:06:02 PAGE 5   

 240   2          
 241   2          HD7279Write(UNDECODE+DIGITTAL_TUBE_LENGTH -1 - index,tubeString[index]);
 242   2        }
 243   1      
 244   1      }
 245          uint8_t KeyRead(void)
 246          {
 247   1        HD7279SendByte(0x15);
 248   1        return(HD7279ReceiveByte());
 249   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1386    ----
   CONSTANT SIZE    =     36    ----
   XDATA SIZE       =     14      58
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
