C51 COMPILER V9.59.0.0   INTERRUPT                                                         12/28/2018 19:06:02 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE INTERRUPT
OBJECT MODULE PLACED IN .\Objects\interrupt.obj
COMPILER INVOKED BY: E:\Keil5\C51\BIN\C51.EXE USERS\HardWare\interrupt.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\USERS\H
                    -ardWare;.\USERS) DEBUG OBJECTEXTEND PRINT(.\Listings\interrupt.lst) TABS(2) OBJECT(.\Objects\interrupt.obj)

line level    source

   1          /****************************interrupt.c********************************/
   2          
   3          #include "timer.h"
   4          #include "STC15F2K60S2.h"
   5          #include "main.h"
   6          #include "gpio.h"
   7          #include "interrupt.h"
   8          #include "delay.h"
   9          #include "82C55.h"
  10          #include "82C54.h"
  11          #include "ADDA.h"
  12          #include "HD7279.h"
  13          /*ËøêË°åÁ®ãÂ∫èÊ†áÂøó‰Ωç*/
  14          static uint8_t runFlag=0;
  15          /*** @brief   ËøêË°åÁ®ãÂ∫èÊ†áÂøó‰ΩçÁΩÆ1ÂáΩÊï∞
  16            *  @param   void           
  17            *  @retval  None 
  18            */
  19          void SetRunFlag(void)
  20          {
  21   1        runFlag=1;
  22   1      }
  23          /*** @brief    ÂæóÂà∞ÂΩìÂâçËøêË°åÊ†áÂøó‰ΩçÔºåËã•‰∏∫1Ôºå‰æøÁΩÆ0Âπ∂‰∏îÂú®‰∏ªÂáΩÊï∞Âà§Êñ≠Ôºå‰ΩøÂæó‰∏ªÂáΩÊï∞Ëø
             -êË°å‰∏ÄÊ¨°
  24            *  @param    void           
  25            *  @retval   ‰∏∫1‰∏ªÁ®ãÂ∫èËÉΩÂ§üËøêË°å‰∏ÄÊ¨°  ‰∏∫0‰∏ªÁ®ãÂ∫è‰∏çËøêË°å
  26            */
  27          uint8_t GetRunFlag(void)
  28          {
  29   1        if(runFlag)
  30   1        {
  31   2          runFlag =0;
  32   2          return 1; 
  33   2        }
  34   1        return 0;
  35   1      }
  36          /*** @brief   ÂÆöÊó∂Âô®0‰∏≠Êñ≠ timeCntËÆ°Êï∞ÔºåÂèØËÉΩËøõ‰∏ÄÊ¨°‰∏≠Êñ≠ÁöÑÊó∂Èó¥Â§™Áü≠ÔºåÈÄöËøáËΩØ‰ª∂Â¢û
  37                        Âä†ËÆ°Êó∂Êó∂Èó¥
  38                        ÈÄöËøáÈ¢ÑÁºñËØë#ifÂà§Êñ≠5msËøêË°åÂë®ÊúüÁî±Ë∞ÅÊèê‰æõ
  39            *  @param   void           
  40            *  @retval  None
  41            */
  42          static  uint32_t xdata timeCnt=0;
  43          void TIM0_Handler() interrupt 1 
  44          {
  45   1        /*DACËæìÂá∫*/
  46   1        #if ADDA_EXP == DAC_EXP
                DacOUT();
                #endif
  49   1        
  50   1        #if RUN_PERIOD_BY_TIM == FIVE_MS_RUN_BY_TIM0
  51   1          timeCnt++;
  52   1          if(timeCnt>=PERIOD_RUN)
  53   1          {
C51 COMPILER V9.59.0.0   INTERRUPT                                                         12/28/2018 19:06:02 PAGE 2   

  54   2            timeCnt=0;
  55   2            SetRunFlag();
  56   2          }
  57   1        #else
                  
                #endif
  60   1      }
  61          
  62          /*** @brief   ÂÆöÊó∂Âô®1‰∏≠Êñ≠ timeCntËÆ°Êï∞ÔºåÂèØËÉΩËøõ‰∏ÄÊ¨°‰∏≠Êñ≠ÁöÑÊó∂Èó¥Â§™Áü≠ÔºåÈÄöËøáËΩØ‰ª∂Â¢û
  63                        Âä†ËÆ°Êó∂Êó∂Èó¥
  64                        ÈÄöËøáÈ¢ÑÁºñËØë#ifÂà§Êñ≠5msËøêË°åÂë®ÊúüÁî±Ë∞ÅÊèê‰æõ
  65            *  @param   void           
  66            *  @retval  None  
  67            */
  68          void TIM1_Handler() interrupt 3
  69          {
  70   1        #if RUN_PERIOD_BY_TIM == FIVE_MS_RUN_BY_TIM1
                  timeCnt++;
                  if(timeCnt>=PERIOD_RUN)
                  {
                    timeCnt=0;
                    SetRunFlag();
                  }
                #else
  78   1        #endif
  79   1      }
  80          /*** @brief    Â§ñÈÉ®‰∏≠Êñ≠ÂàùÂßãÂåñÂáΩÊï∞
  81            *  @param    EXNumber ÂàùÂßãÂåñÂ§ñÈÉ®‰∏≠Êñ≠Â∫èÂè∑ 0/1   
  82            *  @param    workMode Â§ñÈÉ®‰∏≠Êñ≠Â∑•‰ΩúÊñπÂºè  EX_INTERRUPT_BY_LOW_LEVEL ‰ΩéÁîµÂπ≥Ëß¶Âèë EX_INTERRUPT_B
             -Y_EDGEËæπÊ≤øËß¶Âèë          
  83            *  @retval   None
  84            */
  85          void EXHandlerInit(uint8_t EXNumber,uint8_t workMode)
  86          {
  87   1        if(EXNumber==EX_INTERRUPT0)
  88   1        {
  89   2          EX0=1;
  90   2          IT0=workMode; 
  91   2        }
  92   1        else if(EXNumber==EX_INTERRUPT1)
  93   1        {
  94   2          EX1=1;
  95   2          IT1=workMode; 
  96   2        }
  97   1        EA = 1;
  98   1      }
  99          /*** @brief    Â§ñÈÉ®‰∏≠Êñ≠0‰∏≠Êñ≠ÂáΩÊï∞ gParam.c55LedMode Áî®Êù•ÊéßÂà∂ÁÅØÊòæÁ§∫Ê®°Âºè
 100            *  @param    void       
 101            *  @retval   None
 102            */
 103          uint8_t lastKeyValue=0;
 104          void EX0Handler(void) interrupt 0
 105          {
 106   1        gParam.finalUpdate = 1;
 107   1        gParam.readKey=KeyRead();
 108   1        switch(gParam.readKey)
 109   1        {
 110   2          case KEY12:
 111   2            gParam.finalMode = LEFT_TO_RIGHT;
 112   2          break;
 113   2          
 114   2          case KEY13:
C51 COMPILER V9.59.0.0   INTERRUPT                                                         12/28/2018 19:06:02 PAGE 3   

 115   2            gParam.finalMode = RIGHT_TO_LEFT;
 116   2          break;
 117   2          
 118   2          default:
 119   2          break;
 120   2        }
 121   1        
 122   1      //  gParam.flag++;
 123   1      //  gParam.flag%=2;
 124   1      //  P1=0xff;
 125   1      }
 126          /*** @brief    Â§ñÈÉ®‰∏≠Êñ≠1‰∏≠Êñ≠ÂáΩÊï∞ 
 127            *  @param    void       
 128            *  @retval   None
 129            */
 130          void EX1Handler(void) interrupt 2
 131          {
 132   1      
 133   1      
 134   1      
 135   1      
 136   1      } 
 137          /*** @brief    ‰∏≤Âè£‰∏≠Êñ≠ÂáΩÊï∞
 138            *  @param    void       
 139            *  @retval   None
 140            */
 141          void USART_Handler(void)  interrupt 4 
 142          {
 143   1        if(RI)
 144   1        {
 145   2          RI=0;
 146   2          gParam.receiveDataByUsart = (uint8_t)SBUF;
 147   2        }
 148   1      }
 149          /*** @brief    ‰∏≠Êñ≠‰ºòÂÖàÁ∫ßÈÖçÁΩÆ
 150            *  @param    void       
 151            *  @retval   None
 152            */
 153          void Interrupt_Priority(uint8_t priority)
 154          {
 155   1          IP |= priority;
 156   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    222    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      4    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
