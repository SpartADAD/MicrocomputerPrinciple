C51 COMPILER V9.59.0.0   MOTOR                                                             12/05/2018 00:18:07 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MOTOR
OBJECT MODULE PLACED IN .\Objects\motor.obj
COMPILER INVOKED BY: E:\Keil5\C51\BIN\C51.EXE USERS\HardWare\motor.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\USERS\HardW
                    -are;.\USERS) DEBUG OBJECTEXTEND PRINT(.\Listings\motor.lst) TABS(2) OBJECT(.\Objects\motor.obj)

line level    source

   1          /****************************motor.c********************************/
   2          #include "motor.h"
   3          #include "gpio.h"
   4          #include "STC15F2K60S2.h"
   5          #include "math.h"
   6          #include "main.h"
   7          #include "delay.h"
   8          
   9          #define CLOCK_WISE            1
  10          #define COUNTER_CLOCK_WISE    0
  11          
  12          void MotorControl(void)
  13          {
  14   1        uint32_t xdata vel = 0;
  15   1        vel=10+((MOTOR_VEL_HIGH<<1)|MOTOR_VEL_LOW)*30;
  16   1        
  17   1        if(MOTOR_SWITCH)
  18   1        {
  19   2          if(MOTOR_ROTATE_DIRECTION)
  20   2          {
  21   3            MotorRotate(CLOCK_WISE,vel);
  22   3          }
  23   2          else
  24   2          {
  25   3            MotorRotate(COUNTER_CLOCK_WISE,vel);  
  26   3          }
  27   2        }
  28   1      }
  29          #define SEQUENCE    4
  30          void MotorRotate(uint8_t rotateDirection,uint32_t rotateVel)
  31          {
  32   1        uint8_t xdata sequence=0;
  33   1        uint8_t xdata myCode=0;
  34   1        if(rotateDirection)
  35   1        {
  36   2          for(sequence = 0; sequence<SEQUENCE;sequence++)
  37   2          {
  38   3            myCode=pow(2,sequence);
  39   3            
  40   3            P1=myCode;
  41   3            DelayMs(rotateVel);
  42   3            
  43   3            myCode=myCode|(myCode<<1);
  44   3            if(myCode>0x0f)
  45   3            {
  46   4              myCode=0x09;
  47   4            }
  48   3            
  49   3            P1=myCode;
  50   3            DelayMs(rotateVel);
  51   3          }
  52   2        }
  53   1        else
  54   1        {
C51 COMPILER V9.59.0.0   MOTOR                                                             12/05/2018 00:18:07 PAGE 2   

  55   2          for(sequence = SEQUENCE-1; sequence>0;sequence--)
  56   2          {
  57   3            myCode=pow(2,sequence);
  58   3            
  59   3            P1=myCode;
  60   3            DelayMs(rotateVel);
  61   3            
  62   3            myCode=myCode|(myCode>>1);
  63   3            if(myCode==0x01)
  64   3            {
  65   4              myCode=0x09;
  66   4            }
  67   3            
  68   3            P1=myCode;
  69   3            DelayMs(rotateVel);
  70   3          }
  71   2        }
  72   1      
  73   1      }
  74          
  75          void MotorRotateByTIM(void)
  76          {
  77   1        uint8_t xdata myCode[8]={0x01,0x03,0x02,0x06,0x04,0x0C,0x08,0x09};
  78   1        uint16_t xdata timeControl=200;
  79   1        uint16_t xdata rotateVel=((MOTOR_VEL_HIGH<<1)|MOTOR_VEL_LOW);
  80   1        static  uint8_t xdata rotateDirection=CLOCK_WISE;
  81   1        static uint32_t xdata runTime=0;
  82   1        static uint16_t xdata rotateVelTime=0;
  83   1        static char xdata runStep =0;
  84   1        runTime++;
  85   1        rotateVelTime++;
  86   1        
  87   1        if(runTime<=timeControl)
  88   1        {
  89   2          rotateDirection = CLOCK_WISE;
  90   2        }
  91   1        else if(runTime>timeControl&&runTime<=2*timeControl)
  92   1        {
  93   2          rotateDirection = COUNTER_CLOCK_WISE;
  94   2        }
  95   1        else if(runTime>2*timeControl)
  96   1        {
  97   2          runTime=0;
  98   2          rotateDirection = CLOCK_WISE;
  99   2        }
 100   1        
 101   1        if(rotateVelTime>=rotateVel)
 102   1        {
 103   2          rotateVelTime = 0;
 104   2          if(rotateDirection)
 105   2          {
 106   3            runStep++;
 107   3            if(runStep>=8)
 108   3              runStep=0;
 109   3          }
 110   2          else
 111   2          {
 112   3            runStep--;
 113   3            if(runStep<0)
 114   3              runStep=7;
 115   3          }
 116   2        }
C51 COMPILER V9.59.0.0   MOTOR                                                             12/05/2018 00:18:07 PAGE 3   

 117   1        
 118   1        P1 = myCode[runStep];
 119   1        
 120   1          
 121   1      }
 122          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    616    ----
   CONSTANT SIZE    =      8    ----
   XDATA SIZE       =      6      16
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
