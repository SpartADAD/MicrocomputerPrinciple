C51 COMPILER V9.59.0.0   89C51_IT                                                          10/16/2018 22:59:29 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE 89C51_IT
OBJECT MODULE PLACED IN .\Objects\89C51_it.obj
COMPILER INVOKED BY: E:\Keil5\C51\BIN\C51.EXE 89C51_it.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\89C51_it.lst) TABS(2) OBJECT(.\Objects\89C51_it.obj)

line level    source

   1          /***********************89C51_it.c***************************/
   2          
   3          #include "89C51_it.h"
   4          #include "timer.h"
   5          #include "usart.h"
   6          #include "brushDcMotor.h"
   7          #include "stepMotor.h"
   8          extern unsigned char LedItStatus;
   9          //外部引用电机相对位置变量
  10          extern unsigned int xdata relativePos;
  11          //外部引用电机实际速度变量
  12          extern float xdata actSpeed;
  13          //外部引用信号量变量
  14          extern unsigned char xdata semapher;
  15          
  16          //外部中断使能失能函数
  17          void ExternalITCmd(exITTypedef_t exITx, FunctionalState_t newState)
  18          {
  19   1        //根据输入的中断号和状态对相应寄存器进行置位或复位
  20   1        if(exITx==exIT0)
  21   1        {
  22   2          EX0 = newState;
  23   2        }
  24   1        else if(exITx==exIT1)
  25   1        {
  26   2          EX1 = newState;
  27   2        }
  28   1      }
  29          
  30          /**
  31            * @brief  外部中断初始化
  32            * @note
  33            * @param  exITx：中断标号
  34          *           exIT0:中断0
  35          *       exIT1:中断1
  36          * @param  triggerMode:触发模式
  37          *       EXIT_UPDOWN_TRIGGER：电平触发
  38          *       EXIT_DOWN_TRIGGER：下降沿触发         
  39            * @retval none
  40            */
  41          void ExternalITInit(exITTypedef_t exITx , unsigned char triggerMode)
  42          {
  43   1        //根据输入的中断号和触发模式对相应寄存器进行配置
  44   1        if(exITx==exIT0)
  45   1        {
  46   2          IT0 = triggerMode;
  47   2          ExternalITCmd(exIT0 , enable);
  48   2        }
  49   1        else if(exITx==exIT1)
  50   1        {
  51   2          IT1  = triggerMode;
  52   2          ExternalITCmd(exIT1 , enable);    
  53   2        }
  54   1      }
C51 COMPILER V9.59.0.0   89C51_IT                                                          10/16/2018 22:59:29 PAGE 2   

  55          
  56          //外部中断0中断服务函数
  57          void interint0()interrupt 0
  58          {
  59   1        if(LedItStatus)
  60   1        {
  61   2          LedItStatus = 0;
  62   2        }
  63   1        else
  64   1        {
  65   2          LedItStatus = 1;
  66   2        }
  67   1      }
  68          
  69          //外部中断1服务函数1KHz
  70          void ExIT1_Handler() interrupt 2
  71          {
  72   1        //任务周期100ms
  73   1        #define TASK_PERIOD (100)
  74   1        //计时变量
  75   1        static unsigned char xdata periodCounter = TASK_PERIOD;
  76   1        
  77   1        periodCounter--;
  78   1        //每一次任务周期对信号量置位并读取电位置
  79   1        if(periodCounter==0)
  80   1        {
  81   2          periodCounter = TASK_PERIOD;
  82   2          
  83   2          //读取电机位置
  84   2          TimerCmd(TIM0 , disable);
  85   2          relativePos = TH0<<8;
  86   2          relativePos|= TL0;
  87   2          TH0 = 0;
  88   2          TL0 = 0;
  89   2          TimerCmd(TIM0 ,enable); 
  90   2          
  91   2          //计算电机转速
  92   2          actSpeed = relativePos*10/COUNT_PER_CIRCLE*2.0*PI;
  93   2          
  94   2          semapher = 1;
  95   2        }
  96   1        
  97   1        StepMotorSpeedControl(actSpeed/6.366f);
  98   1      }
  99          //定时器0溢出中断服务函数
 100          void time0()interrupt 1
 101          {
 102   1        TimerClearOverFlowFlag(TIM0);
 103   1      
 104   1      //  relativePos = CCAP1H<<8;
 105   1      //  relativePos|= CCAP1L;
 106   1      //  CCAP1H = 0;
 107   1      //  CCAP1L = 0;
 108   1        
 109   1      }
 110          
 111          extern unsigned char UART1Recieve;
 112          
 113          void UART1_ITHandler()interrupt 4
 114          {
 115   1        if(UARTGetFlagStatus(UART1,UART_Rx_IT_FLAG)==SET)
 116   1        {
C51 COMPILER V9.59.0.0   89C51_IT                                                          10/16/2018 22:59:29 PAGE 3   

 117   2          UART1Recieve = UARTRecieveByte(UART1);
 118   2          UARTClearFlagStatus(UART1, UART_Rx_IT_FLAG);
 119   2        }
 120   1        else if(UARTGetFlagStatus(UART1,UART_Tx_IT_FLAG)==SET)
 121   1        {
 122   2      //    UARTClearFlagStatus(UART1, UART_Tx_IT_FLAG);
 123   2        }
 124   1      }
 125          
 126          //PCA中断
 127          void PCA_ITHandler()interrupt 7 using 1
 128          {
 129   1        if(CF)
 130   1        {
 131   2          CF = 0;
 132   2          
 133   2        }
 134   1        if(CCF0)
 135   1        {
 136   2          CCF0=0;
 137   2        }
 138   1          
 139   1          
 140   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    433    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
