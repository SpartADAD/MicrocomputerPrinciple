C51 COMPILER V9.59.0.0   GPIO                                                              11/08/2018 13:56:18 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE GPIO
OBJECT MODULE PLACED IN .\Objects\gpio.obj
COMPILER INVOKED BY: E:\Keil5\C51\BIN\C51.EXE USERS\HardWare\gpio.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\USERS\HardWa
                    -re;.\USERS) DEBUG OBJECTEXTEND PRINT(.\Listings\gpio.lst) TABS(2) OBJECT(.\Objects\gpio.obj)

line level    source

   1          /****************************gpio.c********************************/
   2          
   3          #include "gpio.h"
   4          #include "STC15F2K60S2.h"
   5          #include "math.h"
   6          #include "main.h"
   7          //const enum
   8          //{
   9          //  GPIOP0 = 0,
  10          //  GPIOP1,
  11          //  GPIOP2,
  12          //  GPIOP3,
  13          //  GPIOP4
  14          //}GPIOTypeDef_t;
  15          
  16          void GPIOx_SetBits(unsigned char GPIOx,unsigned char GPIO_Pin_x)
  17          {
  18   1        switch(GPIOx)
  19   1        {
  20   2          case GPIOP0:
  21   2            P0 |=(int)pow(2,GPIO_Pin_x);
  22   2          break;
  23   2          
  24   2          case GPIOP1:
  25   2            P1 |=(int)pow(2,GPIO_Pin_x);
  26   2          break;
  27   2          
  28   2          case GPIOP2:
  29   2            P2 |=(int)pow(2,GPIO_Pin_x);
  30   2          break;
  31   2          
  32   2          case GPIOP3:
  33   2            P3 |=(int)pow(2,GPIO_Pin_x);
  34   2          break;
  35   2          
  36   2          case GPIOP4:
  37   2            P4 |=(int)pow(2,GPIO_Pin_x);
  38   2          break;
  39   2          
  40   2          default:
  41   2            
  42   2          break;
  43   2        }
  44   1          
  45   1      }
  46          
  47          void GPIOx_ResetBits(unsigned char GPIOx,unsigned char GPIO_Pin_x)
  48          {
  49   1        switch(GPIOx)
  50   1        {
  51   2          case GPIOP0:
  52   2            P0 &=(~(int)pow(2,GPIO_Pin_x));
  53   2          break;
  54   2          
C51 COMPILER V9.59.0.0   GPIO                                                              11/08/2018 13:56:18 PAGE 2   

  55   2          case GPIOP1:
  56   2            P1 &=(~(int)pow(2,GPIO_Pin_x));
  57   2          break;
  58   2          
  59   2          case GPIOP2:
  60   2            P2 &=(~(int)pow(2,GPIO_Pin_x));
  61   2          break;
  62   2          
  63   2          case GPIOP3:
  64   2            P3 &=(~(int)pow(2,GPIO_Pin_x));
  65   2          break;
  66   2          
  67   2          case GPIOP4:
  68   2            P4 &=(~(int)pow(2,GPIO_Pin_x));
  69   2          break;
  70   2          
  71   2          default:
  72   2            
  73   2          break;
  74   2        }
  75   1      
  76   1      }
  77          
  78          unsigned char GPIOx_ReadBits(unsigned char GPIOx, unsigned char GPIO_Pin_x)
  79          {
  80   1        unsigned char returnStatus=0;
  81   1        unsigned char GPIO_Pin_x_BIN=(int)pow(2,GPIO_Pin_x);
  82   1        
  83   1        switch(GPIOx)
  84   1        {
  85   2          case GPIOP0:
  86   2            P0|=GPIO_Pin_x_BIN;
  87   2            returnStatus = P0 & GPIO_Pin_x_BIN;
  88   2          break;
  89   2          
  90   2          case GPIOP1:
  91   2            P1|=GPIO_Pin_x_BIN;
  92   2            returnStatus = P1 & GPIO_Pin_x_BIN;
  93   2          break;
  94   2          
  95   2          case GPIOP2:
  96   2            P2|=GPIO_Pin_x_BIN;
  97   2            returnStatus = P2 & GPIO_Pin_x_BIN;
  98   2          break;
  99   2          
 100   2          case GPIOP3:
 101   2            P3|=GPIO_Pin_x_BIN;
 102   2            returnStatus = P3 & GPIO_Pin_x_BIN;
 103   2          break;
 104   2          
 105   2          default:
 106   2          break;
 107   2        }
 108   1        
 109   1        return (returnStatus>>GPIO_Pin_x);
 110   1      }
 111          
 112          #define GET_BIT_NUMBER    4
 113          void KeyControl(void)
 114          {
 115   1        unsigned char HighFour=0;
 116   1        
C51 COMPILER V9.59.0.0   GPIO                                                              11/08/2018 13:56:18 PAGE 3   

 117   1        /*输入端置位操作*/
 118   1        P1|=0xf0;
 119   1        
 120   1        HighFour=(P1 & 0xf0); 
 121   1        P1= (~(HighFour>>4));
 122   1      
 123   1      }
 124          void ShowKeyValue(void)
 125          {
 126   1        unsigned char HighFour=0; 
 127   1        unsigned char codeMy=0;
 128   1        unsigned char i=0;
 129   1        
 130   1        P1|=0xf0;
 131   1        HighFour= ((P1 & 0xf0)>>4); 
 132   1        /*输入端置位操作*/
 133   1        
 134   1        for(i=0;i<4;i++)
 135   1        {
 136   2          codeMy+=((HighFour&((int)pow(2,i)))>>i)*(i+1);
 137   2        }
 138   1        GPIOx_SetBits(1,3);
 139   1      //  if(HighFour==0x08)
 140   1      //  {
 141   1      //    GPIOx_ResetBits(1,0);
 142   1      //    GPIOx_ResetBits(1,1);
 143   1      //  }
 144   1      //  else if(HighFour==0x04)
 145   1      //  {
 146   1      //    GPIOx_SetBits(1,0);
 147   1      //    GPIOx_ResetBits(1,1);
 148   1      //  }else if(HighFour==0x02)
 149   1      //  {
 150   1      //    GPIOx_ResetBits(1,0);
 151   1      //    GPIOx_SetBits(1,1);
 152   1      //  }else if (HighFour==0x01)
 153   1      //  {
 154   1      //    GPIOx_SetBits(1,0);
 155   1      //    GPIOx_SetBits(1,1);
 156   1      //  }else
 157   1      //  {
 158   1      //    GPIOx_SetBits(1,0);
 159   1      //    GPIOx_SetBits(1,1);
 160   1      //  }
 161   1        P1=~codeMy;
 162   1      
 163   1      }
 164          #define LED_NUMBER     5
 165          void WaterLight(void)
 166          {
 167   1        static uint32_t xdata runTime=0;
 168   1        static uint8_t xdata ledIndex=0;
 169   1        runTime++;
 170   1        
 171   1        if(runTime<=200+gParam.flag*50)
 172   1        {
 173   2          GPIOx_ResetBits(GPIOP1,ledIndex);
 174   2        }
 175   1        else if(runTime>200+gParam.flag*50&&runTime<400)
 176   1        {
 177   2          GPIOx_SetBits(GPIOP1,ledIndex);
 178   2        }
C51 COMPILER V9.59.0.0   GPIO                                                              11/08/2018 13:56:18 PAGE 4   

 179   1        else if(runTime>=400)
 180   1        {
 181   2          runTime=0;
 182   2          ledIndex++;
 183   2          ledIndex%=LED_NUMBER;
 184   2        }
 185   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    767    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      3       8
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
